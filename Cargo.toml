[package]
name = "this-week-in-bevy"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
axum = { version = "0.7", features = ["macros"], optional = true }
console_error_panic_hook = "0.1"
leptos = { version = "0.7", features = ["nightly", "islands"] }
leptos_axum = { version = "0.7", optional = true }
leptos_meta = { version = "0.7" }
leptos_router = { version = "0.7", features = ["nightly"] }
tokio = { version = "1", features = ["rt-multi-thread"], optional = true }
tower = { version = "0.5.2", optional = true }
tower-http = { version = "0.6.2", features = ["fs"], optional = true }
wasm-bindgen = "=0.2.100"
thiserror = "1"
tracing = { version = "0.1", optional = true }
http = "1"
serde = { version = "1.0", features = ["derive"] }
time = { version = "0.3.34", features = ["formatting", "macros", "parsing"] }
serde_json = { version = "1.0", features = ["raw_value"] }
sqlx = { version = "0.7", features = [
    "mysql",
    "runtime-tokio",
    "tls-rustls",
    "time",
    "json",
], optional = true }
futures = "0.3.30"
comrak = { version = "0.27.0", optional = true }
syntect = { version = "5.2.0", optional = true }
axum-login = { version = "0.13.1", optional = true }
async-trait = "0.1.77"
oauth2 = { version = "4.4.2", optional = true }
reqwest = { version = "0.11.24", features = ["json"] }
tracing-subscriber = { version = "0.3.18", features = ["fmt"], optional = true }
rusty_ulid = "2.0.0"
tower-sessions-core = "0.10.2"
rmp-serde = { version = "1.1.2", optional = true }
nom = "7.1.3"
cloudinary = { version = "0.4.0", optional = true }
data-encoding = { version = "2.5.0", optional = true }
itertools = "0.12.1"
atom_syndication = "0.12.2"
url = "2.5.0"
mrml = { version = "4", optional = true }

[features]
hydrate = ["leptos/hydrate"]
ssr = [
    "dep:axum",
    "dep:tokio",
    "dep:tower",
    "dep:tower-http",
    "dep:leptos_axum",
    "dep:comrak",
    "dep:syntect",
    "dep:axum-login",
    "dep:oauth2",
    "leptos/ssr",
    "leptos_meta/ssr",
    "leptos_router/ssr",
    "dep:tracing",
    "dep:tracing-subscriber",
    "dep:sqlx",
    "dep:rmp-serde",
    "dep:cloudinary",
    "dep:data-encoding",
    "dep:mrml",
]
gen-email = [
    "dep:tokio",
    "dep:sqlx",
    "tokio/full",
    "dep:mrml",
    "mrml/local-loader",
    "mrml/http-loader-base",
    "mrml/async",
    "mrml/http-loader-async-reqwest",
]
tracing-subscriber = ["dep:tracing-subscriber"]

# Defines a size-optimized profile for the WASM bundle in release mode
[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1
panic = "abort"

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "this-week-in-bevy"
bin-target = "this-week-in-bevy"

# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
# style-file = "style/index.css"
tailwind-input-file = "style/index.css"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"

# The port to use for automatic reload monitoring
reload-port = 3001

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = false

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"
